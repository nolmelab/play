// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TOPIC_ALPHA_H_
#define FLATBUFFERS_GENERATED_TOPIC_ALPHA_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace alpha {

enum topic : uint16_t {
  topic_auth_req_login = 101,
  topic_auto_req_login_f2b = 102,
  topic_auth_syn_login_b2f = 103,
  topic_auth_res_login = 104,
  topic_auth_req_logout = 105,
  topic_auth_req_logout_f2b = 106,
  topic_auth_syn_logout_b2f = 107,
  topic_auth_res_logout_b2f = 108,
  topic_auth_res_logout = 109,
  topic_room_req_create = 201,
  topic_room_req_create_f2b = 202,
  topic_room_req_create_b2f = 203,
  topic_room_res_create_f2b = 204,
  topic_room_res_create = 205,
  topic_room_req_page = 206,
  topic_room_req_page_f2b = 207,
  topic_room_res_page_b2f = 208,
  topic_room_res_page = 209,
  topic_room_req_reserve = 210,
  topic_room_req_reserve_f2b = 211,
  topic_room_req_reserve_b2f = 212,
  topic_room_res_reserve_f2b = 213,
  topic_room_res_reserve_b2f = 214,
  topic_room_res_reserve = 215,
  topic_room_req_checkin = 216,
  topic_room_syn_checkin_f2b = 217,
  topic_room_res_checkin = 218,
  topic_room_req_chat = 219,
  topic_room_res_chat = 220,
  topic_room_syn_chat = 221,
  topic_room_req_leave = 222,
  topic_room_syn_leave_f2b = 223,
  topic_room_res_leave = 224,
  topic_MIN = topic_auth_req_login,
  topic_MAX = topic_room_res_leave
};

inline const topic (&EnumValuestopic())[33] {
  static const topic values[] = {
    topic_auth_req_login,
    topic_auto_req_login_f2b,
    topic_auth_syn_login_b2f,
    topic_auth_res_login,
    topic_auth_req_logout,
    topic_auth_req_logout_f2b,
    topic_auth_syn_logout_b2f,
    topic_auth_res_logout_b2f,
    topic_auth_res_logout,
    topic_room_req_create,
    topic_room_req_create_f2b,
    topic_room_req_create_b2f,
    topic_room_res_create_f2b,
    topic_room_res_create,
    topic_room_req_page,
    topic_room_req_page_f2b,
    topic_room_res_page_b2f,
    topic_room_res_page,
    topic_room_req_reserve,
    topic_room_req_reserve_f2b,
    topic_room_req_reserve_b2f,
    topic_room_res_reserve_f2b,
    topic_room_res_reserve_b2f,
    topic_room_res_reserve,
    topic_room_req_checkin,
    topic_room_syn_checkin_f2b,
    topic_room_res_checkin,
    topic_room_req_chat,
    topic_room_res_chat,
    topic_room_syn_chat,
    topic_room_req_leave,
    topic_room_syn_leave_f2b,
    topic_room_res_leave
  };
  return values;
}

inline const char * const *EnumNamestopic() {
  static const char * const names[125] = {
    "auth_req_login",
    "auto_req_login_f2b",
    "auth_syn_login_b2f",
    "auth_res_login",
    "auth_req_logout",
    "auth_req_logout_f2b",
    "auth_syn_logout_b2f",
    "auth_res_logout_b2f",
    "auth_res_logout",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "room_req_create",
    "room_req_create_f2b",
    "room_req_create_b2f",
    "room_res_create_f2b",
    "room_res_create",
    "room_req_page",
    "room_req_page_f2b",
    "room_res_page_b2f",
    "room_res_page",
    "room_req_reserve",
    "room_req_reserve_f2b",
    "room_req_reserve_b2f",
    "room_res_reserve_f2b",
    "room_res_reserve_b2f",
    "room_res_reserve",
    "room_req_checkin",
    "room_syn_checkin_f2b",
    "room_res_checkin",
    "room_req_chat",
    "room_res_chat",
    "room_syn_chat",
    "room_req_leave",
    "room_syn_leave_f2b",
    "room_res_leave",
    nullptr
  };
  return names;
}

inline const char *EnumNametopic(topic e) {
  if (::flatbuffers::IsOutRange(e, topic_auth_req_login, topic_room_res_leave)) return "";
  const size_t index = static_cast<size_t>(e) - static_cast<size_t>(topic_auth_req_login);
  return EnumNamestopic()[index];
}

}  // namespace alpha

#endif  // FLATBUFFERS_GENERATED_TOPIC_ALPHA_H_
